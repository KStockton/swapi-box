{"version":3,"sources":["noFav.svg","logo.svg","DeathStar.svg","Stroop.svg","Falcon.svg","components/App/AppHelper.js","components/Scroll/Scroll.js","components/Controls/Controls.js","components/Card/Card.js","components/CardContainer/CardContainer.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","fetchData","urlText","url","concat","fetch","then","response","ok","json","Error","Scroll","_ref","filmText","title","episode","releaseDate","openingCrawl","header","numeral","react_default","a","createElement","className","Controls","props","name","onClick","handleCategory","src","trooper","alt","planets","falcon","Card","card","homeworld","species","language","population","terrain","climate","residents","model","vehicleClass","passengers","topic","noFav","shortid","require","CardContainer","category","cards","map","item","components_Card_Card","Object","assign","key","generate","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","filmNumber","Math","floor","random","result","opening_crawl","release_date","episode_id","setState","isLoading","catch","error","handleFetch","getPeople","state","characters","completeSpeciesPromise","character","objectSpread","Promise","all","getSpecies","results","charactersData","characterBios","homeWorld","bio","homeworlds","getHomeWorld","people","vehicles","usercategory","getVehicles","getPlanets","_this2","residentOnly","length","i","getResidents","_this3","vehicle","vehicle_class","initialDisplay","logo","components_Controls_Controls","components_Scroll_Scroll","components_CardContainer_CardContainer","Component","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac4ee178.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noFav.d072b762.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/DeathStar.e7f35859.svg\";","module.exports = __webpack_public_path__ + \"static/media/Stroop.0043575e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Falcon.fbdbc00b.svg\";","\n\nfunction fetchData(urlText){\n  let url; \n\n  if(urlText === 'people/' ){\n    url = `https:/swapi.co/api/${urlText}`\n  } else {\n    url = urlText\n  }\n  return fetch(url)\n    \n  .then(response => {\n      if(!response.ok){\n        throw Error('Error fetching data')\n      } else {\n        return response.json()\n      }\n  });\n};\n\nfunction getSpecies(characters){\n  const completeSpeciesPromise = characters.map(character =>{\n\n    return fetchData(character.species[0])         \n           .then(species => ({...character, species}))\n  })\n  return Promise.all(completeSpeciesPromise)\n};\n\n function getHomeWorld(characterBios){\n   \n  const homeWorld = characterBios.map(bio => {\n    return fetchData(bio.homeworld)\n           .then(homeworlds => ({\n             name: bio.name, \n             homeworld: homeworlds.name, \n             population: homeworlds.population, \n             species: bio.species.name, \n             language: bio.species.language }))\n  })\n  return Promise.all(homeWorld)\n};\n\nfunction getResidents(planets){\n  // eslint-disable-next-line array-callback-return\n  const residents = planets.map(residentOnly => {\n \n    if(residentOnly.residents.length > 0) {\n      for (let i = 0; i < residentOnly.residents.length; i++)\n      return fetchData(residentOnly.residents[i])\n\n    .then(results => (\n      {\n        name: residentOnly.name, \n        terrain: residentOnly.terrain, \n        population: residentOnly.population, \n        climate: residentOnly.climate, \n        residents: results.name\n      })\n\n     ) } else {\n          return {\n            name: residentOnly.name, \n            terrain: residentOnly.terrain, \n            population: residentOnly.population, \n            climate: residentOnly.climate, \n            residents: `NA`\n          }\n         }\n       }) \n  return Promise.all(residents)\n}\n\n\nexport {\n  getHomeWorld,\n  getSpecies,\n  fetchData,\n  getResidents,\n}\n","import React from 'react';\nimport './Scroll.scss'\nimport PropTypes from 'prop-types'\n\nconst Scroll = ( { filmText } ) => {\n  const {title, episode, releaseDate, openingCrawl, header} = filmText\n  let romanNumerals = [\"I\", \"II\",\"III\", \"IV\", \"V\", \"VI\", \"VII\" ]\n  let numeral = romanNumerals[episode - 1]\n  \n  return (\n    <article className=\"Scroll-article\">\n      <p className=\"Scroll-galaxy-text\">{header}</p>\n        <div className=\"filmtext-wrapper-before\">\n          <div className=\"filmtext-wrapper-after\">\n            <h1>{title}</h1>\n            <h2>Episode {numeral}</h2>\n            <h4>Date {releaseDate}</h4>\n            <h5>{openingCrawl}</h5>\n          </div>\n        </div>\n  </article>)\n}\n\nScroll.propTypes = {\n  filmText: PropTypes.object\n}\n\nexport default Scroll","import React from 'react';\nimport './Controls.scss';\nimport planets from '../../DeathStar.svg'\nimport PropTypes from 'prop-types';\nimport trooper from '../../Stroop.svg';\nimport falcon from '../../Falcon.svg';\n\n\nconst Controls = (props) => {\n  \n  return(\n    <section className=\"Controls-wrapper\">\n      <h1 className=\"title\">Swapi-Box</h1>\n      <button className=\"Controls-btn people\" name='people' onClick={() => props.handleCategory('people')}>\n      <div className=\"vehicles-wrapper\">\n        <img src={trooper} alt=\"star-trooper\"/>\n        People\n        </div>\n      </button>\n      <button className=\"Controls-btn planets\" name='planets' onClick={() => props.handleCategory('planets')}>\n      <div className=\"vehicles-wrapper\">\n        <img src={planets} alt=\"deathstar\"/>\n        Planets\n        </div>\n      </button>\n      <button  className=\"Controls-btn vehicles\" name='vehicles' onClick={() => props.handleCategory('vehicles')}>\n        <div className=\"vehicles-wrapper\">\n          <img src={falcon} alt=\"falcon\"/>\n            Vehicles\n        </div>\n      </button>\n    </section>\n  )\n  }\n\n  Controls.propTypes = {\n    handleCategory: PropTypes.func\n  }\n\nexport default Controls","import React from 'react'\nimport './Card.scss'\nimport noFav from '../../noFav.svg'\n// import fav from '../../fav.svg'\nimport PropTypes from 'prop-types'\n\n\n\nconst Card = ({name, homeworld, species, language, population, terrain, climate, residents, model, vehicleClass, passengers, topic}) => {\n\nlet card\n  if(topic === 'people'){\n     card = <article className=\"Card-wrapper\">\n    <h3 className=\"Card-info name\"><span className=\"Card-text\">Name:</span> {name}<img src={noFav} alt=\"favorite\" /></h3>\n    <p className=\"Card-info\"><span className=\"Card-text\">Homeworld:</span> {homeworld}</p>\n    <p className=\"Card-info\"><span className=\"Card-text\">Species:</span> {species}</p>\n    <p className=\"Card-info\"><span className=\"Card-text\">Language:</span> {language}</p>\n    <p className=\"Card-info\"><span className=\"Card-text\">Population:</span> {population}</p>\n  </article>\n  } else if(topic === 'planets'){\n   card = <article className=\"Card-wrapper\">\n    <h3 className=\"Card-info name\"><span className=\"Card-text\">Name:</span> {name}<img src={noFav} alt=\"favorite\" /></h3>\n    <p className=\"Card-info\"><span className=\"Card-text\">Terrain:</span> {terrain}</p>\n    <p className=\"Card-info\"><span className=\"Card-text\">Population:</span> {population}</p>\n    <p className=\"Card-info\"><span className=\"Card-text\">Climate:</span> {climate}</p>\n    <p className=\"Card-info\"><span className=\"Card-text\">Residents:</span> {residents}</p>\n  </article>\n  } else {\n    card = <article className=\"Card-wrapper\">\n    <h3 className=\"Card-info name\"><span className=\"Card-text\">Name:</span> {name}<img src={noFav} alt=\"favorite\" /></h3>\n    <p className=\"Card-info\"><span className=\"Card-text\">Model:</span> {model}</p>\n    <p className=\"Card-info\"><span className=\"Card-text\">Class:</span> {vehicleClass}</p>\n    <p className=\"Card-info\"><span className=\"Card-text\">Passengers:</span> {passengers}</p>\n  </article>\n  }\n\n  return (\n    <div>\n      {card}\n    </div>\n  )\n}\n    Card.propTypes = {\n      name: PropTypes.string,\n      homeworld: PropTypes.string,\n      species: PropTypes.string,\n      language: PropTypes.string,\n      topic: PropTypes.string\n    }\n\nexport default Card","import React from 'react';\nimport Card from '../Card/Card'\nimport './CardContainer.scss'\nconst shortid = require('shortid')\n\nconst CardContainer = ({category, topic}) => {\n  let cards = category.map(item =>{\n   return <Card {...item} key={shortid.generate()} topic={topic}/>\n  })\n  \n  return (\n    <section className=\"CardContainer-wrapper\">\n       {cards}\n    </section>\n  )\n}\n\nexport default CardContainer","import React, { Component } from 'react';\nimport { getSpecies, fetchData, getHomeWorld, getResidents} from './AppHelper.js'\nimport Scroll from '../Scroll/Scroll.js'\nimport logo from '../../logo.svg';\nimport './_App.scss';\nimport Controls from '../Controls/Controls.js'\nimport CardContainer from '../CardContainer/CardContainer.js'\n// import Favorites from '../Favorites/Favorites'\n\nexport default class App extends Component {\n  constructor(){\n    super()\n\n  this.state = {\n    filmText: {},\n    isLoading: true,\n    category: '',\n    people: [],\n    vehicles: [],\n    planets: [],\n    error: ''\n  }\n}\n\ncomponentDidMount = () => {\n  const filmNumber = Math.floor(Math.random() * 7) + 1\n  const url = `https://swapi.co/api/films/${filmNumber}/`\n  return fetchData(url)\n  .then(result => {\n    const filmText = {\n      openingCrawl: result.opening_crawl,\n      title: result.title,\n      releaseDate: result.release_date,\n      episode: result.episode_id,\n      header: `from a galaxy far far away`\n    }\n    this.setState({ \n          filmText,\n          isLoading: false\n        })\n  })\n  .catch(error => this.setState({error}))\n\n}\n\nhandleCategory = name => {\n  // const { name } = event.target\n  // let category = event.target.name\n  this.handleFetch(name)\n  this.setState({category: name})\n}\n\nhandleFetch(usercategory){\n\n  switch(usercategory) {\n    case 'people':\n      this.getPeople();\n      break;\n    case 'vehicles':\n      this.getVehicles()\n      break;\n    case 'planets':\n      this.getPlanets()\n      break;\n    default: return null\n  }\n}\n\ngetPeople = () => {\n  this.setState({isLoading: !this.state.isLoading})\n  return fetchData('people/')\n  .then(characters => getSpecies(characters.results))\n  .then(charactersData => getHomeWorld(charactersData))\n  .then(people => this.setState({ people, isLoading: false}))\n  .catch(error => this.setState({error}))\n}\n\ngetPlanets(){\n  this.setState({isLoading: true })\n  const url = `https://swapi.co/api/planets/`\n  return fetchData(url)\n  .then(planets => getResidents(planets.results))\n  .then(planets => this.setState({ planets, isLoading: false}))\n  .catch(error => this.setState({error}))\n}\n\ngetVehicles(){\n  this.setState({isLoading: true})\n  const url = `https://swapi.co/api/vehicles/`\n  return fetchData(url)\n  .then(result => result.results.map(vehicle => {\n    return { \n      name: vehicle.name, \n      passengers: vehicle.passengers,\n      vehicleClass: vehicle.vehicle_class, \n      model: vehicle.model\n    }\n  }\n))\n\n  .then(vehicles => this.setState({vehicles, isLoading: false}))\n}\n\nrender() {\n  const { category } = this.state\n  // const categoryStatus = this.state.category === ''\n  let initialDisplay\n  if(this.state.isLoading)\n   initialDisplay = \n                  <section>\n                    <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                    <h5>Loading have faith...</h5>\n                  </section>\n \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Controls handleCategory={this.handleCategory}/>\n        {initialDisplay}\n        {/* <Favorites /> */}\n      </header>\n      { category === '' ? \n        <Scroll filmText={this.state.filmText} /> : \n        <CardContainer category={this.state[this.state.category]} topic={this.state.category}/> \n      }\n      <footer>\n      </footer>\n    </div>\n  );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}