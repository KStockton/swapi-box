{"version":3,"sources":["assests/noFav.svg","assests/logo.svg","assests/DeathStar.svg","assests/Trooper.svg","assests/Falcon.svg","Util/fetch.js","components/Scroll/Scroll.js","components/Controls/Controls.js","components/Card/Card.js","components/CardContainer/CardContainer.js","components/App/App.js","index.js"],"names":["module","exports","__webpack_require__","p","fetchData","urlText","url","concat","fetch","then","response","ok","json","Error","Scroll","_ref","filmText","title","episode","releaseDate","openingCrawl","header","numeral","react_default","a","createElement","className","Controls","props","name","onClick","handleCategory","src","trooper","alt","planets","falcon","Card","card","homeworld","species","language","population","terrain","climate","residents","model","vehicleClass","passengers","topic","noFav","shortid","require","CardContainer","category","cards","map","item","components_Card_Card","Object","assign","key","generate","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","filmNumber","Math","floor","random","result","opening_crawl","release_date","episode_id","setState","isLoading","catch","error","handleFetch","getPeople","state","characters","completeSpeciesPromise","character","objectSpread","Promise","all","getSpecies","results","charactersData","characterBios","homeWorld","bio","homeworlds","getHomeWorld","people","getPlanets","residentOnly","length","i","getResidents","vehicles","usercategory","getVehicles","_this2","vehicle","vehicle_class","initialDisplay","logo","components_Controls_Controls","components_Scroll_Scroll","components_CardContainer_CardContainer","Component","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.4ad21cc9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noFav.d072b762.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/DeathStar.e7f35859.svg\";","module.exports = __webpack_public_path__ + \"static/media/Trooper.0043575e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Falcon.fbdbc00b.svg\";","function fetchData(urlText) {\n  let url; \n\n  if (urlText === 'people/' ) {\n    url = `https:/swapi.co/api/${urlText}`;\n  } else {\n    url = urlText;\n  }\n  return fetch(url)\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Error fetching data');\n      } else {\n        return response.json();\n      }\n    });\n}\n\nfunction getSpecies(characters) {\n  const completeSpeciesPromise = characters.map(character =>{\n\n    return fetchData(character.species[0])         \n      .then(species => ({...character, species}));\n  });\n  return Promise.all(completeSpeciesPromise);\n}\n\nfunction getHomeWorld(characterBios) {\n   \n  const homeWorld = characterBios.map(bio => {\n    return fetchData(bio.homeworld)\n      .then(homeworlds => ({\n        name: bio.name, \n        homeworld: homeworlds.name, \n        population: homeworlds.population, \n        species: bio.species.name, \n        language: bio.species.language }));\n  });\n  return Promise.all(homeWorld);\n}\n\nfunction getResidents(planets) {\n  // eslint-disable-next-line array-callback-return\n  const residents = planets.map(residentOnly => {\n \n    if (residentOnly.residents.length > 0) {\n      for (let i = 0; i < residentOnly.residents.length; i++) {\n        return fetchData(residentOnly.residents[i])\n          .then(results => (\n            {\n              name: residentOnly.name, \n              terrain: residentOnly.terrain, \n              population: residentOnly.population, \n              climate: residentOnly.climate, \n              residents: results.name\n            })\n          )\n        ;\n      } \n    } else {\n      return {\n        name: residentOnly.name, \n        terrain: residentOnly.terrain, \n        population: residentOnly.population, \n        climate: residentOnly.climate, \n        residents: `NA`\n      };\n    }\n  });\n  return Promise.all(residents);\n}\n\n\nexport {\n  getHomeWorld,\n  getSpecies,\n  fetchData,\n  getResidents,\n};\n","import React from 'react';\nimport './Scroll.scss';\nimport PropTypes from 'prop-types';\n\nconst Scroll = ( { filmText } ) => {\n  const {title, episode, releaseDate, openingCrawl, header} = filmText;\n  let romanNumerals = [\"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\" ];\n  let numeral = romanNumerals[episode - 1];\n  \n  return (\n    <article className=\"Scroll-article\">\n      <p className=\"Scroll-galaxy-text\">{header}</p>\n      <div className=\"filmtext-wrapper-before\">\n        <div className=\"filmtext-wrapper-after\">\n          <h1>{title}</h1>\n          <h2>Episode {numeral}</h2>\n          <h4>Date {releaseDate}</h4>\n          <h5>{openingCrawl}</h5>\n        </div>\n      </div>\n    </article>);\n};\n\nScroll.propTypes = {\n  filmText: PropTypes.object\n};\n\nexport default Scroll;","import React from 'react';\nimport './Controls.scss';\nimport planets from '../../assests/DeathStar.svg';\nimport PropTypes from 'prop-types';\nimport trooper from '../../assests/Trooper.svg';\nimport falcon from '../../assests/Falcon.svg';\n\n\nconst Controls = (props) => {\n  \n  return (\n    <section className=\"Controls-wrapper\">\n      <h1 className=\"title\">Swapi-Box</h1>\n      <button className=\"Controls-btn people\" name='people' onClick={() => props.handleCategory('people')}>\n        <div className=\"vehicles-wrapper\">\n          <img src={trooper} alt=\"star-trooper\"/>\n        People\n        </div>\n      </button>\n      <button className=\"Controls-btn planets\" name='planets' onClick={() => props.handleCategory('planets')}>\n        <div className=\"vehicles-wrapper\">\n          <img src={planets} alt=\"deathstar\"/>\n        Planets\n        </div>\n      </button>\n      <button  className=\"Controls-btn vehicles\" name='vehicles' onClick={() => props.handleCategory('vehicles')}>\n        <div className=\"vehicles-wrapper\">\n          <img src={falcon} alt=\"falcon\"/>\n            Vehicles\n        </div>\n      </button>\n    </section>\n  );\n};\n\nControls.propTypes = {\n  handleCategory: PropTypes.func\n};\n\nexport default Controls;","import React from 'react';\nimport './Card.scss';\nimport noFav from '../../assests/noFav.svg';\n// import fav from '../../assests/fav.svg'\nimport PropTypes from 'prop-types';\n\n\n\nconst Card = ({\n  name, homeworld, species, language, population, \n  terrain, climate, residents, model, vehicleClass, \n  passengers, topic}) => {\n\n  let card;\n\n  if (topic === 'people') {\n    card = <article className=\"Card-wrapper\">\n      <h3 className=\"Card-info name\"><span className=\"Card-text\">Name:</span> {name}<img src={noFav} alt=\"favorite\" /></h3>\n      <p className=\"Card-info\"><span className=\"Card-text\">Homeworld:</span> {homeworld}</p>\n      <p className=\"Card-info\"><span className=\"Card-text\">Species:</span> {species}</p>\n      <p className=\"Card-info\"><span className=\"Card-text\">Language:</span> {language}</p>\n      <p className=\"Card-info\"><span className=\"Card-text\">Population:</span> {population}</p>\n    </article>;\n  } else if (topic === 'planets') {\n    card = <article className=\"Card-wrapper\">\n      <h3 className=\"Card-info name\"><span className=\"Card-text\">Name:</span> {name}<img src={noFav} alt=\"favorite\" /></h3>\n      <p className=\"Card-info\"><span className=\"Card-text\">Terrain:</span> {terrain}</p>\n      <p className=\"Card-info\"><span className=\"Card-text\">Population:</span> {population}</p>\n      <p className=\"Card-info\"><span className=\"Card-text\">Climate:</span> {climate}</p>\n      <p className=\"Card-info\"><span className=\"Card-text\">Residents:</span> {residents}</p>\n    </article>;\n  } else {\n    card = <article className=\"Card-wrapper\">\n      <h3 className=\"Card-info name\"><span className=\"Card-text\">Name:</span> {name}<img src={noFav} alt=\"favorite\" /></h3>\n      <p className=\"Card-info\"><span className=\"Card-text\">Model:</span> {model}</p>\n      <p className=\"Card-info\"><span className=\"Card-text\">Class:</span> {vehicleClass}</p>\n      <p className=\"Card-info\"><span className=\"Card-text\">Passengers:</span> {passengers}</p>\n    </article>;\n  }\n\n  return (\n    <div>\n      {card}\n    </div>\n  );\n};\n\nCard.propTypes = {\n  name: PropTypes.string,\n  homeworld: PropTypes.string,\n  species: PropTypes.string,\n  language: PropTypes.string,\n  topic: PropTypes.string\n};\n\nexport default Card;","import React from 'react';\nimport Card from '../Card/Card';\nimport './CardContainer.scss';\nconst shortid = require('shortid');\n\nconst CardContainer = ({category, topic}) => {\n  let cards = category.map(item =>{\n    return <Card {...item} key={shortid.generate()} topic={topic}/>;\n  });\n  \n  return (\n    <section className=\"CardContainer-wrapper\">\n      {cards}\n    </section>\n  );\n};\n\nexport default CardContainer;","import React, { Component } from 'react';\nimport { getSpecies, fetchData, getHomeWorld, getResidents} from '../../Util/fetch.js';\nimport Scroll from '../Scroll/Scroll.js';\nimport logo from '../../assests/logo.svg';\nimport './_App.scss';\nimport Controls from '../Controls/Controls.js';\nimport CardContainer from '../CardContainer/CardContainer.js';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      filmText: {},\n      isLoading: true,\n      category: '',\n      people: [],\n      vehicles: [],\n      planets: [],\n      error: ''\n    };\n  }\n\ncomponentDidMount = () => {\n  const filmNumber = Math.floor(Math.random() * 7) + 1;\n  const url = `https://swapi.co/api/films/${filmNumber}/`;\n  return fetchData(url)\n    .then(result => {\n      const filmText = {\n        openingCrawl: result.opening_crawl,\n        title: result.title,\n        releaseDate: result.release_date,\n        episode: result.episode_id,\n        header: `from a galaxy far far away`\n      };\n      this.setState({ \n        filmText,\n        isLoading: false\n      });\n    })\n    .catch(error => this.setState({error}));\n\n}\n\nhandleCategory = name => {\n  this.handleFetch(name);\n  this.setState({category: name});\n}\n\nhandleFetch(usercategory) {\n\n  switch (usercategory) {\n  case 'people':\n    this.getPeople();\n    break;\n  case 'vehicles':\n    this.getVehicles();\n    break;\n  case 'planets':\n    this.getPlanets();\n    break;\n  default: return null;\n  } \n}\n\ngetPeople = () => {\n  this.setState({isLoading: !this.state.isLoading});\n  return fetchData('people/')\n    .then(characters => getSpecies(characters.results))\n    .then(charactersData => getHomeWorld(charactersData))\n    .then(people => this.setState({ people, isLoading: false}))\n    .catch(error => this.setState({error}));\n}\n\ngetPlanets = () => {\n  this.setState({isLoading: true });\n\n  const url = `https://swapi.co/api/planets/`;\n\n  return fetchData(url)\n    .then(planets => getResidents(planets.results))\n    .then(planets => this.setState({ planets, isLoading: false}))\n    .catch(error => this.setState({error}));\n}\n\ngetVehicles() {\n  this.setState({isLoading: true});\n\n  const url = `https://swapi.co/api/vehicles/`;\n  \n  return fetchData(url)\n    .then(result => result.results.map(vehicle => {\n      return { \n        name: vehicle.name, \n        passengers: vehicle.passengers,\n        vehicleClass: vehicle.vehicle_class, \n        model: vehicle.model\n      };\n    }\n    ))\n\n    .then(vehicles => this.setState({vehicles, isLoading: false}));\n}\n\nrender() {\n  const { category } = this.state;\n  let initialDisplay;\n\n  if (this.state.isLoading) {\n    initialDisplay = \n      <section>\n        <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n        <h5>Loading have faith...</h5>\n      </section>;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Controls handleCategory={this.handleCategory}/>\n        {initialDisplay}\n      </header>\n      { category === '' ? \n        <Scroll filmText={this.state.filmText} /> : \n        <CardContainer category={this.state[this.state.category]} topic={this.state.category}/> \n      }\n      <footer>\n      </footer>\n    </div>\n  );\n}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Sass/index.scss';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}